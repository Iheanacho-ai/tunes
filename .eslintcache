[{"C:\\Users\\HP\\Documents\\music-app\\src\\App.js":"1","C:\\Users\\HP\\Documents\\music-app\\src\\component\\aside-bar\\aside-bar.jsx":"2","C:\\Users\\HP\\Documents\\music-app\\src\\pages\\explore\\explore.jsx":"3","C:\\Users\\HP\\Documents\\music-app\\src\\pages\\genre-categories-playlist\\genre-categories-playlist.jsx":"4","C:\\Users\\HP\\Documents\\music-app\\src\\component\\header\\header.jsx":"5","C:\\Users\\HP\\Documents\\music-app\\src\\component\\explore-header-div\\explore-header-div.jsx":"6","C:\\Users\\HP\\Documents\\music-app\\src\\component\\pricing\\pricing.jsx":"7","C:\\Users\\HP\\Documents\\music-app\\src\\index.js":"8","C:\\Users\\HP\\Documents\\music-app\\src\\firebase\\firebase.utils.js":"9","C:\\Users\\HP\\Documents\\music-app\\src\\pages\\signup-page\\signup-page.jsx":"10","C:\\Users\\HP\\Documents\\music-app\\src\\pages\\discover\\discover.jsx":"11","C:\\Users\\HP\\Documents\\music-app\\src\\component\\toggle-menu\\toggle-menu.jsx":"12","C:\\Users\\HP\\Documents\\music-app\\src\\component\\spinner\\spinner.jsx":"13","C:\\Users\\HP\\Documents\\music-app\\src\\component\\pricing-item\\pricing-item.jsx":"14","C:\\Users\\HP\\Documents\\music-app\\src\\pages\\landing-page\\landing-page.jsx":"15","C:\\Users\\HP\\Documents\\music-app\\src\\component\\music-div\\music-div.jsx":"16","C:\\Users\\HP\\Documents\\music-app\\src\\pages\\genre-categories-playlist-songs\\genre-categories-playlist-songs.jsx":"17","C:\\Users\\HP\\Documents\\music-app\\src\\pages\\songs-display\\songs-display.jsx":"18","C:\\Users\\HP\\Documents\\music-app\\src\\pages\\signin-page\\signin-page.jsx":"19","C:\\Users\\HP\\Documents\\music-app\\src\\reportWebVitals.js":"20"},{"size":6437,"mtime":1616698226628,"results":"21","hashOfConfig":"22"},{"size":1120,"mtime":1616708775023,"results":"23","hashOfConfig":"22"},{"size":1948,"mtime":1616707840185,"results":"24","hashOfConfig":"22"},{"size":2031,"mtime":1616699122067,"results":"25","hashOfConfig":"22"},{"size":1386,"mtime":1615905438926,"results":"26","hashOfConfig":"22"},{"size":1128,"mtime":1616699036373,"results":"27","hashOfConfig":"22"},{"size":1017,"mtime":1616710812755,"results":"28","hashOfConfig":"22"},{"size":592,"mtime":1609627909650,"results":"29","hashOfConfig":"22"},{"size":1415,"mtime":1616716792750,"results":"30","hashOfConfig":"22"},{"size":3074,"mtime":1616717380060,"results":"31","hashOfConfig":"22"},{"size":1099,"mtime":1610306333384,"results":"32","hashOfConfig":"22"},{"size":389,"mtime":1609792680812,"results":"33","hashOfConfig":"22"},{"size":156,"mtime":1615063864314,"results":"34","hashOfConfig":"22"},{"size":856,"mtime":1616710668017,"results":"35","hashOfConfig":"22"},{"size":830,"mtime":1616715976267,"results":"36","hashOfConfig":"22"},{"size":1167,"mtime":1616323341056,"results":"37","hashOfConfig":"22"},{"size":3550,"mtime":1616699396433,"results":"38","hashOfConfig":"22"},{"size":2917,"mtime":1616706682909,"results":"39","hashOfConfig":"22"},{"size":2591,"mtime":1616717448272,"results":"40","hashOfConfig":"22"},{"size":362,"mtime":1607302098864,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},"woo4ka",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"C:\\Users\\HP\\Documents\\music-app\\src\\App.js",["91","92","93","94","95"],"import ReactDOM from 'react-dom';\nimport React,{ useState, useEffect } from 'react';\nimport { Route, Redirect, Link } from 'react-router-dom';\n\n\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport { faPlayCircle } from '@fortawesome/free-solid-svg-icons'\n\n\nimport Header from './component/header/header';\nimport LandingPage from './pages/landing-page/landing-page';\nimport SignInPage from './pages/signin-page/signin-page';\nimport SignUpPage from './pages/signup-page/signup-page';\nimport Explore from './pages/explore/explore';\nimport GenreCategoriesPlaylist from './pages/genre-categories-playlist/genre-categories-playlist';\nimport GenreCategoriesPlaylistSongs from './pages/genre-categories-playlist-songs/genre-categories-playlist-songs';\nimport SongDisplay from './pages/songs-display/songs-display';\nimport Discover from './pages/discover/discover';\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils';\n\n\nimport './App.css';\n\nlibrary.add(fab, faPlayCircle);\n\n\nconst App = () => { \n  const [currentUser, setCurrentUser ] = useState(null);\n  const [token, setToken ] = useState('');\n  const [ genreCategories, setGenreCategories ] = useState(null);\n  const [genreCategoriesPlaylist, setGenreCategoriesPlaylist ] = useState(null);\n  const [genreCategoriesPlaylistSongs, setGenreCategoriesPlaylistSongs ] = useState(null);\n  const [ playASong, setPlayASong ] = useState(null);\n  const [songs, setSongs ] = useState(null);\n\n  const clientID = '1fd358f724e042788ce8e3cc381b552f';\n  const clientSecret = 'db78ee8fc24241f7910d939e59e4feb1';\n  const location = window.location;\n\n\n    let unsubscribeFromAuth = null\n\n    useEffect(()=> {\n      unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n        \n        if( userAuth ){\n          const userRef = await createUserProfileDocument(userAuth)\n\n          userRef.onSnapshot(snapShot => {\n            setCurrentUser({\n              id: snapShot.id,\n              ...snapShot.data()\n              \n            })\n          });\n        }else{\n          setCurrentUser( userAuth );\n        }\n      })\n\n      return() => {\n       unsubscribeFromAuth();\n\n      }\n    },[]\n  )\n\n\n  useEffect(() => {\n    const getToken =  async () => {\n        const result = await fetch('https://accounts.spotify.com/api/token',{\n            method: 'POST',\n            headers:{\n                'Content-Type': 'application/x-www-form-urlencoded',\n                'Authorization': 'Basic ' + btoa(clientID + ':' + clientSecret)\n            },\n            body: `grant_type=client_credentials`\n        });\n\n        const data = await result.json();\n        setToken(data.access_token);   \n        \n        const getGenres = await fetch('https://api.spotify.com/v1/browse/categories',{\n            method: 'GET',\n            headers: {\n            'Authorization': 'Bearer ' + data.access_token\n\n            }\n        });\n\n        const genreResponse = await getGenres.json();\n        setGenreCategories(genreResponse.categories.items);\n\n\n\n                \n        \n    };\n\n    getToken();\n      \n  }, [])\n\n\n\n\n\n\n\n  const getGenrePlaylist = async (e) => {\n    const id = e.target.id;\n\n    const itemObject = genreCategories.find(item => item.id === id );\n      const genreSongs = await fetch(`https://api.spotify.com/v1/browse/categories/${itemObject.id}/playlists`,{\n\n        method: 'GET',\n        headers: {\n        'Authorization': 'Bearer ' + token\n        }\n    });\n\n    const genreSongsResponse = await genreSongs.json();\n    setGenreCategoriesPlaylist(genreSongsResponse.playlists.items);\n   \n          \n  }\n\n\n\n  const getGenrePlaylistSongs= async(e)=> {\n\n    const trackId = e.target.id;\n    const playlistObject = genreCategoriesPlaylist.find(item => item.id === trackId);\n\n\n    \n\n    const genrePlaylistSongs = await fetch(`https://api.spotify.com/v1/playlists/${playlistObject.id}/tracks?limit=20`,{\n\n      method: 'GET',\n      headers: {\n      'Authorization': 'Bearer ' + token\n      }\n    })\n\n\n\n\n    const genrePlaylistSongsResponse = await genrePlaylistSongs.json();\n\n\n    setGenreCategoriesPlaylistSongs({\n      name: playlistObject.name,\n      image: playlistObject.images[0].url,\n      items: genrePlaylistSongsResponse.items\n      \n    }); \n\n   \n\n  }\n\n  const searchMusic = async (e, value) => {\n    if(e.charCode === 13){\n      console.log('enter');\n      const searchResponse = await fetch(`https://api.spotify.com/v1/search?q=${value}&type=track%2Cartist&market=US&limit=10&offset=5`, {\n        method: 'GET',\n        headers: {\n        'Authorization': 'Bearer ' + token\n        }\n      })\n\n      const searchResponseData = await searchResponse.json();\n      setSongs({\n        artists: searchResponseData.artists.items,\n        tracks: searchResponseData.tracks.items\n      })\n\n\n      // window.location.href = `${location}/songs`;\n\n\n    }\n   \n\n\n\n\n  }\n\n  useEffect(() => console.log(songs), [songs]);\n\n  \n  const PlayMusic = (e) => {\n    \n    const musicId = e.target.id;\n    const musicObject = genreCategoriesPlaylistSongs.items.find(item => item.track.id === musicId);\n    setPlayASong(musicObject,'musicObject' );\n\n\n  }\n\n\n  \n  \n    \n\n    \n  \n\n  \n\n  return(\n    <div>\n      <Route exact path = '/' component = { LandingPage} />\n      <Route exact path = '/signin' render={() => currentUser ? (<Redirect to= '/explore' />) : ( <SignInPage/> )} />\n      <Route exact path  = '/signup' render={() => currentUser ? (<Redirect to= '/explore' />) : ( <SignUpPage/> )} />\n      <Route exact path = '/explore' component= {() => <Explore genreCategories = {genreCategories} getGenrePlaylist = {getGenrePlaylist} searchMusic ={searchMusic} /> } />\n      <Route exact path = '/genre-playlist' component= {() => <GenreCategoriesPlaylist genreCategoriesPlaylist = {genreCategoriesPlaylist} getGenrePlaylistSongs= {getGenrePlaylistSongs} searchMusic ={searchMusic} /> } />\n      <Route exact path = '/:location/songs' component= {() => <SongDisplay songs={songs} PlayMusic= {PlayMusic} searchMusic ={searchMusic} /> } />\n      <Route exact path = '/genre-playlist/playlist' component= {() => <GenreCategoriesPlaylistSongs genreCategoriesPlaylistSongs = {genreCategoriesPlaylistSongs} PlayMusic= {PlayMusic} playASong = {playASong} searchMusic ={searchMusic} /> } />\n      <Route exact path = '/discover' component = { Discover} />\n\n    \n      \n      \n    </div>\n  )\n}\n\nexport default App;\n","C:\\Users\\HP\\Documents\\music-app\\src\\component\\aside-bar\\aside-bar.jsx",[],"C:\\Users\\HP\\Documents\\music-app\\src\\pages\\explore\\explore.jsx",[],"C:\\Users\\HP\\Documents\\music-app\\src\\pages\\genre-categories-playlist\\genre-categories-playlist.jsx",[],"C:\\Users\\HP\\Documents\\music-app\\src\\component\\header\\header.jsx",[],["96","97"],"C:\\Users\\HP\\Documents\\music-app\\src\\component\\explore-header-div\\explore-header-div.jsx",[],"C:\\Users\\HP\\Documents\\music-app\\src\\component\\pricing\\pricing.jsx",[],"C:\\Users\\HP\\Documents\\music-app\\src\\index.js",[],["98","99"],"C:\\Users\\HP\\Documents\\music-app\\src\\firebase\\firebase.utils.js",[],"C:\\Users\\HP\\Documents\\music-app\\src\\pages\\signup-page\\signup-page.jsx",[],"C:\\Users\\HP\\Documents\\music-app\\src\\pages\\discover\\discover.jsx",[],["100","101"],"C:\\Users\\HP\\Documents\\music-app\\src\\component\\toggle-menu\\toggle-menu.jsx",[],["102","103"],"C:\\Users\\HP\\Documents\\music-app\\src\\component\\spinner\\spinner.jsx",[],["104","105"],"C:\\Users\\HP\\Documents\\music-app\\src\\component\\pricing-item\\pricing-item.jsx",[],"C:\\Users\\HP\\Documents\\music-app\\src\\pages\\landing-page\\landing-page.jsx",[],"C:\\Users\\HP\\Documents\\music-app\\src\\component\\music-div\\music-div.jsx",[],["106","107"],"C:\\Users\\HP\\Documents\\music-app\\src\\pages\\genre-categories-playlist-songs\\genre-categories-playlist-songs.jsx",["108","109","110"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport AsideBar from '../../component/aside-bar/aside-bar';\r\nimport ExploreHeader from '../../component/explore-header-div/explore-header-div';\r\nimport Spinner from '../../component/spinner/spinner';\r\nimport MusicDiv from '../../component/music-div/music-div';\r\nimport './genre-categories-playlist-songs.styles.css';\r\n\r\nconst GenreCategoriesPlaylistSongs = ({genreCategoriesPlaylistSongs, PlayMusic, playASong, searchMusic}) => {\r\n\r\n    const [ info, setInfo ] = useState(null)\r\n\r\n \r\n    return(\r\n        <div className ='genre-categories-playlist-songs' >\r\n            <div className = 'genre-categories-playlist-songs-aside-bar-div'>\r\n                <AsideBar searchMusic = {searchMusic} />\r\n            </div>\r\n            \r\n            <div className ='genre-categories-playlist-songs-side-bar' >\r\n                \r\n                {\r\n                    genreCategoriesPlaylistSongs ? (\r\n                        <div className = 'genre-categories-playlist-songs-side-bar-div'>\r\n                            <ExploreHeader searchMusic = {searchMusic}/>\r\n                            <div className='genre-categories-playlist-songs-header'>\r\n                                <div className='genre-categories-playlist-songs-header-container'>\r\n                                    <div className='genre-categories-playlist-songs-header-image' style= {{ backgroundImage: `url(${genreCategoriesPlaylistSongs.image})`}}></div>\r\n                                    <div className='genre-categories-playlist-songs-description'><h3>{genreCategoriesPlaylistSongs.name}</h3></div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className= 'genre-categories-playlist-songs-box'>\r\n                                {\r\n                                    genreCategoriesPlaylistSongs ? (\r\n                                        <div className= 'genre-categories-playlist-songs-songs-container'>\r\n                                            {genreCategoriesPlaylistSongs.items.map(({track}) => (\r\n                                                <div>\r\n                                                    <div className = 'genre-categories-playlist-songs-song'>\r\n                                                        <div className='track-name' ><p>{track.name}</p></div>\r\n                                                        <div className= 'play-icon'  >\r\n                                                            <FontAwesomeIcon icon=\"play-circle\" id= {track.id}  onClick = {PlayMusic} />\r\n                                                        </div>\r\n                                                        <div className='track-artiste' ><p>{track.artists[0].name }</p></div>\r\n\r\n                                                    </div>\r\n\r\n                                                \r\n                                                </div>\r\n                                            ))}\r\n                                        </div> \r\n                                    ) : <Spinner />\r\n                                }\r\n                            </div>\r\n        \r\n                        </div>\r\n                    ) : <Spinner/>\r\n                }\r\n             \r\n            </div>\r\n\r\n            <MusicDiv playASong= {playASong} /> \r\n\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\nexport default GenreCategoriesPlaylistSongs;","C:\\Users\\HP\\Documents\\music-app\\src\\pages\\songs-display\\songs-display.jsx",["111","112"],"C:\\Users\\HP\\Documents\\music-app\\src\\pages\\signin-page\\signin-page.jsx",[],"C:\\Users\\HP\\Documents\\music-app\\src\\reportWebVitals.js",[],["113","114"],{"ruleId":"115","severity":1,"message":"116","line":1,"column":8,"nodeType":"117","messageId":"118","endLine":1,"endColumn":16},{"ruleId":"115","severity":1,"message":"119","line":3,"column":27,"nodeType":"117","messageId":"118","endLine":3,"endColumn":31},{"ruleId":"115","severity":1,"message":"120","line":11,"column":8,"nodeType":"117","messageId":"118","endLine":11,"endColumn":14},{"ruleId":"115","severity":1,"message":"121","line":39,"column":9,"nodeType":"117","messageId":"118","endLine":39,"endColumn":17},{"ruleId":"122","severity":1,"message":"123","line":45,"column":29,"nodeType":"124","endLine":60,"endColumn":9},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"125","replacedBy":"129"},{"ruleId":"127","replacedBy":"130"},{"ruleId":"125","replacedBy":"131"},{"ruleId":"127","replacedBy":"132"},{"ruleId":"125","replacedBy":"133"},{"ruleId":"127","replacedBy":"134"},{"ruleId":"125","replacedBy":"135"},{"ruleId":"127","replacedBy":"136"},{"ruleId":"125","replacedBy":"137"},{"ruleId":"127","replacedBy":"138"},{"ruleId":"115","severity":1,"message":"119","line":2,"column":10,"nodeType":"117","messageId":"118","endLine":2,"endColumn":14},{"ruleId":"115","severity":1,"message":"139","line":12,"column":13,"nodeType":"117","messageId":"118","endLine":12,"endColumn":17},{"ruleId":"115","severity":1,"message":"140","line":12,"column":19,"nodeType":"117","messageId":"118","endLine":12,"endColumn":26},{"ruleId":"115","severity":1,"message":"141","line":1,"column":15,"nodeType":"117","messageId":"118","endLine":1,"endColumn":23},{"ruleId":"115","severity":1,"message":"119","line":2,"column":10,"nodeType":"117","messageId":"118","endLine":2,"endColumn":14},{"ruleId":"125","replacedBy":"142"},{"ruleId":"127","replacedBy":"143"},"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Header' is defined but never used.","'location' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'unsubscribeFromAuth' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","no-native-reassign",["144"],"no-negated-in-lhs",["145"],["144"],["145"],["144"],["145"],["144"],["145"],["144"],["145"],["144"],["145"],"'info' is assigned a value but never used.","'setInfo' is assigned a value but never used.","'useState' is defined but never used.",["144"],["145"],"no-global-assign","no-unsafe-negation"]